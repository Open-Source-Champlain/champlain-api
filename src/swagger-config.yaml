openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Champlain API Documentation"
  description: "Champlain Open API Documentation"
servers:
  - url: "http://localhost:8080/api/v1"
    # description: "Identity Server test API"

  ### We don't have a way of testing the API yet, so this
  ### is commented out.


# securitySchemes:
#     # See https://demo.identityserver.io/ for configuration details.
#     identity_server_auth:
#       type: oauth2
#       flows:
#         implicit:
#           authorizationUrl: "https://demo.identityserver.io/connect/authorize"
#           scopes:
#             api: "api"
# security:
#   - identity_server_auth:
#     - api
tags:
- name: dining-menu
  description: Endpoints related to dining.
- name: shuttle
  description: Endpoints relating to the shuttle service.
- name: faculty
  description: Endpoints relating to faculty.
- name: announcements
  description: Endpoints relating to announcements.
paths:
  "/dining-menu/idx":
    get:
      tags:
      - dining-menu
      # summary: "Runs a test request against the Identity Server demo API"
      parameters:
        - in: query
          name: day
          schema:
            type: string
            $ref: '#/components/schemas/dining'
          required: false
          description: Day of the week to get the specific menu type for
        - in: query
          name: station
          schema:
            type: string
            enum:
              - rustic-roots
          required: false
          description: Dining station
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"



  "/dining-menu/cru5h":
    get:
      tags:
      - dining-menu
      # summary: "Runs a test request against the Identity Server demo API"
      parameters:
        - in: query
          name: day
          schema:
            type: string
            $ref: '#/components/schemas/dining'
          required: false
          description: Day of the week to get the specific menu type for
        - in: query
          name: food
          schema:
            type: string
            enum:
              - go_green
              - sauces
              - appz
              - breakfast
              - fun_on_a_bun
              - bad_egg
              - sides
              - mexcellente
              - zertx
          required: false
          description: Dining station
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"


  "/shuttle":
    get:
      tags:
      - shuttle
      # summary: "Runs a test request against the Identity Server demo API"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"

  "/faculty":
    get:
      tags:
      - faculty
      # summary: "Runs a test request against the Identity Server demo API"
      parameters:
      - in: query
        name: type
        schema:
          type: string
          enum:
            - name
            - title
            - department
          example: department
      - in: query
        name: field
        example: Core Division
        required: false
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
    

  "/announcements":
    get:
      tags:
      - announcements
      summary: "Returns any announcements"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/announcements'

components:
  schemas:
    dining:
      type: string
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
    announcements:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        summary:
          type: string
        style:
          type: string
          enum:
            - info
            - emergency
        type:
          type: string
          enum:
            - Mobile
            - Shuttle
            - WWW

